import { PubSubEngine } from "graphql-subscriptions";
import { PubSubPublishArgsByKey } from "./types";
export declare class TypedPubSub<TPubSubPublishArgsByKey extends PubSubPublishArgsByKey> {
    private readonly pubSub;
    constructor(pubSub: PubSubEngine);
    publish<TKey extends Extract<keyof TPubSubPublishArgsByKey, string>>(routingKey: TKey, ...args: TPubSubPublishArgsByKey[TKey]): Promise<void>;
    asyncIterator<TKey extends Extract<keyof TPubSubPublishArgsByKey, string>>(...[routingKey, id]: TPubSubPublishArgsByKey[TKey][1] extends undefined ? [TKey] : [TKey, TPubSubPublishArgsByKey[TKey][0]]): AsyncIterator<TPubSubPublishArgsByKey[TKey][1] extends undefined ? TPubSubPublishArgsByKey[TKey][0] : TPubSubPublishArgsByKey[TKey][1]>;
}
